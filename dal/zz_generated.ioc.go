//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli, run 'iocli gen' to re-generate

package dal

import (
	autowire "github.com/cc-cheunggg/ioc-golang/autowire"
	normal "github.com/cc-cheunggg/ioc-golang/autowire/normal"
	singleton "github.com/cc-cheunggg/ioc-golang/autowire/singleton"
	util "github.com/cc-cheunggg/ioc-golang/autowire/util"
	"github.com/cc-cheunggg/ioc-golang/extension/db/gorm"
	"github.com/cc-cheunggg/ioc-golang/extension/state/redis"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &gORMConn_{}
		},
	})
	gORMConnStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &GORMConn{}
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(gORMConnStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &redisConn_{}
		},
	})
	redisConnStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &RedisConn{}
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(redisConnStructDescriptor)
}

type gORMConn_ struct {
	GetConn_ func() gorm.GORMDBIOCInterface
}

func (g *gORMConn_) GetConn() gorm.GORMDBIOCInterface {
	return g.GetConn_()
}

type redisConn_ struct {
	GetConn_ func() redis.RedisIOCInterface
}

func (r *redisConn_) GetConn() redis.RedisIOCInterface {
	return r.GetConn_()
}

type GORMConnIOCInterface interface {
	GetConn() gorm.GORMDBIOCInterface
}

type RedisConnIOCInterface interface {
	GetConn() redis.RedisIOCInterface
}

var _gORMConnSDID string

func GetGORMConnSingleton() (*GORMConn, error) {
	if _gORMConnSDID == "" {
		_gORMConnSDID = util.GetSDIDByStructPtr(new(GORMConn))
	}
	i, err := singleton.GetImpl(_gORMConnSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*GORMConn)
	return impl, nil
}

func GetGORMConnIOCInterfaceSingleton() (GORMConnIOCInterface, error) {
	if _gORMConnSDID == "" {
		_gORMConnSDID = util.GetSDIDByStructPtr(new(GORMConn))
	}
	i, err := singleton.GetImplWithProxy(_gORMConnSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(GORMConnIOCInterface)
	return impl, nil
}

type ThisGORMConn struct {
}

func (t *ThisGORMConn) This() GORMConnIOCInterface {
	thisPtr, _ := GetGORMConnIOCInterfaceSingleton()
	return thisPtr
}

var _redisConnSDID string

func GetRedisConnSingleton() (*RedisConn, error) {
	if _redisConnSDID == "" {
		_redisConnSDID = util.GetSDIDByStructPtr(new(RedisConn))
	}
	i, err := singleton.GetImpl(_redisConnSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*RedisConn)
	return impl, nil
}

func GetRedisConnIOCInterfaceSingleton() (RedisConnIOCInterface, error) {
	if _redisConnSDID == "" {
		_redisConnSDID = util.GetSDIDByStructPtr(new(RedisConn))
	}
	i, err := singleton.GetImplWithProxy(_redisConnSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(RedisConnIOCInterface)
	return impl, nil
}

type ThisRedisConn struct {
}

func (t *ThisRedisConn) This() RedisConnIOCInterface {
	thisPtr, _ := GetRedisConnIOCInterfaceSingleton()
	return thisPtr
}
